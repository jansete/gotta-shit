{"version":3,"sources":["place_field.js"],"names":[],"mappingsfile":"gottashit_place_field.js","sourcesContent":["(function($){\n    var geocoder;\n    var map;\n    var marker;\n    var position;\n\n    // initialise the google maps objects, and add listeners\n    function gmaps_init() {\n        // center of the universe\n\n        var lat = GottaShit.lat;\n        var lon = GottaShit.lon;\n        var latLonInitial = GottaShit.latLonInitial;\n\n        var latlng = new google.maps.LatLng(lat,lon);\n\n        var options = {\n            zoom: 6,\n            center: latlng,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            zoomControl: true,\n            zoomControlOptions: {\n                style: google.maps.ZoomControlStyle.SMALL,\n                position: google.maps.ControlPosition.RIGHT_BOTTOM\n            },\n            mapTypeControl: false,\n            //panControl: false,\n            //zoomControl: false,\n            streetViewControl: false\n        };\n\n        // create our map object\n        map = new google.maps.Map(document.getElementById(\"place-map\"), options);\n\n        // the geocoder object allows us to do latlng lookup based on address\n        geocoder = new google.maps.Geocoder();\n\n        // the marker shows us the position of the latest address\n        marker = new google.maps.Marker({\n            map: map,\n            draggable: true\n        });\n\n        // Add a DOM event listener to react when the user clic on her location\n        $('.my-location').on('click', 'a', setCurrentLocationCenter);\n\n        // event triggered when marker is dragged and dropped\n        google.maps.event.addListener(marker, 'dragend', function (event) {\n            marker.setMap(map);\n            position = event.latLng;\n            marker.setPosition(position);\n            geocode_lookup('latLng', position, false, position);\n        });\n\n        // event triggered when map is clicked\n        google.maps.event.addListener(map, 'click', function (event) {\n            marker.setMap(map);\n            var position = event.latLng;\n            marker.setPosition(position);\n            marker.setVisible(true);\n            map.setCenter(position);\n            geocode_lookup('latLng', position, false, position);\n            update_latLng(position);\n        });\n\n        if (latLonInitial == 1) {\n            oldLocation = new google.maps.LatLng(lat,lon);\n            marker.setPosition(oldLocation);\n            map.setZoom(17);\n        }\n\n        $('#place-map-error').hide();\n    }\n\n    // move the marker to a new position, and center the map on it\n    function update_map(geometry, marker) {\n        marker.setMap(map);\n        map.fitBounds(geometry.viewport);\n        marker.setPosition(geometry.location)\n    }\n\n    // fill in the UI elements with new position data\n    function update_ui(address, latLng) {\n        $('#place-loc').val(address);\n        update_latLng(latLng);\n    }\n\n    // Complete'#geo_lat #geo_lng before search action\n    function update_latLng(latLng) {\n        $('#geo_lat').val(latLng.lat());\n        $('#geo_lng').val(latLng.lng());\n    }\n\n    function setCurrentLocationCenter() {\n        var centerPoint = new google.maps.LatLng($(this).data(\"latitude\"), $(this).data(\"longitude\"));\n        map.setCenter(centerPoint);\n        map.setZoom(17);\n        marker.setPosition(centerPoint);\n        marker.setVisible(true);\n        map.setCenter(centerPoint);\n        geocode_lookup('latLng', centerPoint, false, centerPoint);\n        update_latLng(centerPoint);\n    }\n    // Query the Google geocode object\n    //\n    // type: 'address' for search by address\n    //       'latLng'  for search by latLng (reverse lookup)\n    //\n    // value: search query\n    //\n    // update: should we update the map (center map and position marker)?\n    function geocode_lookup(type, value, update, initialPosition) {\n        // default value: update = false\n        update = typeof update !== 'undefined' ? update : false;\n\n        request = {};\n        request[type] = value;\n\n        geocoder.geocode(request, function (results, status) {\n            $('#place-map-error').html('');\n            $('#place-map-error').hide();\n            if (status == google.maps.GeocoderStatus.OK) {\n                // Google geocoding has succeeded!\n                if (results[0]) {\n                    // Always update the UI elements with new location data\n                    update_ui(results[0].formatted_address,\n                        results[0].geometry.location);\n\n                    initialPosition = typeof initialPosition !== 'undefined' ? initialPosition : false;\n\n                    if (initialPosition) {\n                        update_latLng(initialPosition);\n                    }\n\n                    // Only update the map (position marker and center map) if requested\n                    if (update) {\n                        update_map(results[0].geometry, marker);\n                    }\n                } else {\n                    // Geocoder status ok but no results!?\n                    $('#place-map-error').html(\"Perdona, algo anda mal. ¡Inténtalo de nuevo!\");\n                    $('#place-map-error').show();\n                }\n            } else {\n                // Google Geocoding has failed. Two common reasons:\n                //   * Address not recognised (e.g. search for 'zxxzcxczxcx')\n                //   * Location doesn't map to address (e.g. click in middle of Atlantic)\n\n                if (type == 'address') {\n                    // User has typed in an address which we can't geocode to a location\n                    $('#place-map-error').html(\"Perdona, no podemos encontrar \" + value + \". Intenta una busqueda diferente o localízate haciendo clic en el mapa.\");\n                    $('#place-map-error').show();\n                    $('#geo_lat').val(\"\");\n                    $('#geo_lng').val(\"\");\n                } else {\n                    // User has clicked or dragged marker to somewhere that Google can't do a reverse lookup for\n                    // In this case we display a warning, clear the address box, but fill in LatLng\n                    $('#place-map-error').html(\"Guau... ¡Estás en un sitio único! Tendrás que introducir manualmente el nombre de ese lugar.\");\n                    $('#place-map-error').show();\n                    update_ui('', value)\n                }\n            }\n            ;\n        });\n    };\n\n    function autocomplete_init() {\n        var input = /** @type {HTMLInputElement} */(\n                document.getElementById('place-loc'));\n\n        var options = {\n            types: [],\n            componentRestrictions: {country: 'es'}\n        };\n\n        var autocomplete = new google.maps.places.Autocomplete(input, options);\n        autocomplete.bindTo('bounds', map);\n\n        google.maps.event.addListener(autocomplete, 'place_changed', function() {\n            marker.setVisible(false);\n            var place = autocomplete.getPlace();\n            if (!place.geometry) {\n                $('#place-map-error').html(\"Autocomplete's returned place contains no geometry.\");\n                return;\n            }\n\n            map.setCenter(place.geometry.location);\n            map.setZoom(17);\n            marker.setPosition(place.geometry.location);\n            marker.setVisible(true);\n            update_latLng(place.geometry.location);\n\n            var address = '';\n            if (place.address_components) {\n                address = [\n                                (place.address_components[0] && place.address_components[0].short_name || ''),\n                    (place.address_components[1] && place.address_components[1].short_name || ''),\n                    (place.address_components[2] && place.address_components[2].short_name || '')\n                ].join(' ');\n            }\n            $('#place-loc').val(address);\n        });\n\n    }; // autocomplete_init\n\n    $(document).ready(function () {\n        // the geocoder object allows us to do latlng lookup based on address\n        //geocoder = new google.maps.Geocoder();\n        gmaps_init();\n        autocomplete_init();\n        $('#place-loc').keydown(function (event) {\n            if (event.which == 13) {\n                event.preventDefault();\n            }\n        });\n        $('#place-loc').keyup(function (event) {\n            if($('#place-loc').val() == \"\") {\n                marker.setVisible(false);\n                $('#geo_lat').val(\"\");\n                $('#geo_lng').val(\"\");\n            }\n        });\n    });\n})(jQuery);\n\n\n//var disclaimer_notice = document.getElementById(\"disclaimer-notice\");\n\nfunction getLocation_field() {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition_field);\n    }\n}\n\nfunction showPosition_field(position){\n    $('#get-my-location').attr(\"data-latitude\", position.coords.latitude );\n    $('#get-my-location').attr(\"data-longitude\", position.coords.longitude);\n    $('#get-my-location').show()\n}\n\ngetLocation_field();"],"sourceRoot":"/source/"}